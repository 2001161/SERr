The best unweighted average accuracy on the validation set is 67%.

Issue:

The v_loss does not consistently decrease and occasionally experiences sudden increases.

The v_loss tends to exhibit gradient vanishing in the later stages.


Epoch 1
Validation Loss: 0.0031
Validation Accuracy: 0.44
Confusion matrix
[[ 1  0 17  0]
 [ 0 44  5 24]
 [ 2  3 24 27]
 [ 0 13 39 99]]
Best Accuracy: 0.44
Best matrix
[[ 1  0 17  0]
 [ 0 44  5 24]
 [ 2  3 24 27]
 [ 0 13 39 99]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 2
Validation Loss: 0.0031
Validation Accuracy: 0.62
Confusion matrix
[[17  0  1  0]
 [ 0 61 12  0]
 [ 6 13 28  9]
 [ 4 57 58 32]]
Best Accuracy: 0.62
Best matrix
[[17  0  1  0]
 [ 0 61 12  0]
 [ 6 13 28  9]
 [ 4 57 58 32]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 3
Validation Loss: 0.0030
Validation Accuracy: 0.54
Confusion matrix
[[ 18   0   0   0]
 [ 21  28   6  18]
 [ 24   2   1  29]
 [ 24  10   0 117]]
Best Accuracy: 0.62
Best matrix
[[17  0  1  0]
 [ 0 61 12  0]
 [ 6 13 28  9]
 [ 4 57 58 32]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 4
Validation Loss: 0.0031
Validation Accuracy: 0.60
Confusion matrix
[[16  0  2  0]
 [ 0 64  7  2]
 [12 17 12 15]
 [ 8 66 16 61]]
Best Accuracy: 0.62
Best matrix
[[17  0  1  0]
 [ 0 61 12  0]
 [ 6 13 28  9]
 [ 4 57 58 32]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 5
Validation Loss: 0.0029
Validation Accuracy: 0.56
Confusion matrix
[[14  0  2  2]
 [ 0 60  5  8]
 [ 9 10  2 35]
 [10 45  3 93]]
Best Accuracy: 0.62
Best matrix
[[17  0  1  0]
 [ 0 61 12  0]
 [ 6 13 28  9]
 [ 4 57 58 32]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 6
Validation Loss: 0.0026
Validation Accuracy: 0.55
Confusion matrix
[[ 16   0   2   0]
 [  0  29  11  33]
 [ 10   2   4  40]
 [ 11   7   6 127]]
Best Accuracy: 0.62
Best matrix
[[17  0  1  0]
 [ 0 61 12  0]
 [ 6 13 28  9]
 [ 4 57 58 32]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 7
Validation Loss: 0.0029
Validation Accuracy: 0.60
Confusion matrix
[[ 14   0   2   2]
 [  0  57   3  13]
 [  9   8   2  37]
 [  8  21   2 120]]
Best Accuracy: 0.62
Best matrix
[[17  0  1  0]
 [ 0 61 12  0]
 [ 6 13 28  9]
 [ 4 57 58 32]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 8
Validation Loss: 0.0028
Validation Accuracy: 0.62
Confusion matrix
[[ 18   0   0   0]
 [  1  52   7  13]
 [ 12   6   1  37]
 [ 16  17   2 116]]
Best Accuracy: 0.62
Best matrix
[[ 18   0   0   0]
 [  1  52   7  13]
 [ 12   6   1  37]
 [ 16  17   2 116]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 9
Validation Loss: 0.0028
Validation Accuracy: 0.60
Confusion matrix
[[ 17   0   1   0]
 [  1  52   8  12]
 [ 14   6   3  33]
 [ 21  20   6 104]]
Best Accuracy: 0.62
Best matrix
[[ 18   0   0   0]
 [  1  52   7  13]
 [ 12   6   1  37]
 [ 16  17   2 116]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 10
Validation Loss: 0.0030
Validation Accuracy: 0.44
Confusion matrix
[[ 2  0 14  2]
 [ 0 65  3  5]
 [ 2 13 11 30]
 [ 1 51 14 85]]
Best Accuracy: 0.62
Best matrix
[[ 18   0   0   0]
 [  1  52   7  13]
 [ 12   6   1  37]
 [ 16  17   2 116]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 11
Validation Loss: 0.0028
Validation Accuracy: 0.53
Confusion matrix
[[  9   0   7   2]
 [  0  52   7  14]
 [  4   6   9  37]
 [  3  18  17 113]]
Best Accuracy: 0.62
Best matrix
[[ 18   0   0   0]
 [  1  52   7  13]
 [ 12   6   1  37]
 [ 16  17   2 116]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 12
Validation Loss: 0.0027
Validation Accuracy: 0.64
Confusion matrix
[[16  0  2  0]
 [ 0 53 11  9]
 [ 8  7 18 23]
 [14 24 18 95]]
Best Accuracy: 0.64
Best matrix
[[16  0  2  0]
 [ 0 53 11  9]
 [ 8  7 18 23]
 [14 24 18 95]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 13
Validation Loss: 0.0029
Validation Accuracy: 0.61
Confusion matrix
[[ 17   0   1   0]
 [  1  52   5  15]
 [ 14   6   3  33]
 [ 19  15   4 113]]
Best Accuracy: 0.64
Best matrix
[[16  0  2  0]
 [ 0 53 11  9]
 [ 8  7 18 23]
 [14 24 18 95]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 14
Validation Loss: 0.0028
Validation Accuracy: 0.62
Confusion matrix
[[ 18   0   0   0]
 [  1  39  13  20]
 [ 14   5  10  27]
 [ 20  10   5 116]]
Best Accuracy: 0.64
Best matrix
[[16  0  2  0]
 [ 0 53 11  9]
 [ 8  7 18 23]
 [14 24 18 95]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 15
Validation Loss: 0.0027
Validation Accuracy: 0.62
Confusion matrix
[[ 14   0   4   0]
 [  0  41  10  22]
 [  3   3  24  26]
 [  7   8  26 110]]
Best Accuracy: 0.64
Best matrix
[[16  0  2  0]
 [ 0 53 11  9]
 [ 8  7 18 23]
 [14 24 18 95]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 16
Validation Loss: 0.0029
Validation Accuracy: 0.58
Confusion matrix
[[ 15   0   0   3]
 [  0  37   3  33]
 [ 10   2   6  38]
 [  8   7   2 134]]
Best Accuracy: 0.64
Best matrix
[[16  0  2  0]
 [ 0 53 11  9]
 [ 8  7 18 23]
 [14 24 18 95]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 17
Validation Loss: 0.0029
Validation Accuracy: 0.67
Confusion matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 18
Validation Loss: 0.0030
Validation Accuracy: 0.43
Confusion matrix
[[ 1  0 12  5]
 [ 0 62  4  7]
 [ 1 11 15 29]
 [ 0 49 18 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 19
Validation Loss: 0.0029
Validation Accuracy: 0.61
Confusion matrix
[[13  0  4  1]
 [ 0 60  9  4]
 [ 6 14 17 19]
 [ 3 36 20 92]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 20
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[  7   0   7   4]
 [  0  54   9  10]
 [  2   8  20  26]
 [  0  24  22 105]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 21
Validation Loss: 0.0029
Validation Accuracy: 0.46
Confusion matrix
[[  2   0   2  14]
 [  0  58   1  14]
 [  0   5   6  45]
 [  0  21   3 127]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 22
Validation Loss: 0.0028
Validation Accuracy: 0.64
Confusion matrix
[[18  0  0  0]
 [ 2 48  9 14]
 [13  4 16 23]
 [29 14 15 93]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 23
Validation Loss: 0.0034
Validation Accuracy: 0.51
Confusion matrix
[[10  0  4  4]
 [ 0 66  7  0]
 [ 2 29 18  7]
 [ 0 94 15 42]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 24
Validation Loss: 0.0029
Validation Accuracy: 0.58
Confusion matrix
[[ 10   0   5   3]
 [  0  57  10   6]
 [  2  10  19  25]
 [  0  33  18 100]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 25
Validation Loss: 0.0032
Validation Accuracy: 0.53
Confusion matrix
[[ 9  0  1  8]
 [ 0 67  4  2]
 [ 2 16 11 27]
 [ 0 66  6 79]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 26
Validation Loss: 0.0026
Validation Accuracy: 0.60
Confusion matrix
[[10  0  8  0]
 [ 0 52 12  9]
 [ 1  8 29 18]
 [ 3 23 34 91]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 27
Validation Loss: 0.0031
Validation Accuracy: 0.41
Confusion matrix
[[ 2  0  1 15]
 [ 0 62  6  5]
 [ 2 16  5 33]
 [ 0 55  7 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 28
Validation Loss: 0.0028
Validation Accuracy: 0.57
Confusion matrix
[[ 10   0   1   7]
 [  0  50   7  16]
 [  3   4  13  36]
 [  3  17   7 124]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 29
Validation Loss: 0.0025
Validation Accuracy: 0.48
Confusion matrix
[[  2   0   8   8]
 [  0  48  13  12]
 [  1   3  25  27]
 [  0  18  27 106]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 30
Validation Loss: 0.0028
Validation Accuracy: 0.61
Confusion matrix
[[13  0  4  1]
 [ 0 57  8  8]
 [ 2 10 16 28]
 [ 1 37 15 98]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 31
Validation Loss: 0.0027
Validation Accuracy: 0.50
Confusion matrix
[[ 5  0  6  7]
 [ 0 60  6  7]
 [ 1 12 19 24]
 [ 0 47 20 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 32
Validation Loss: 0.0026
Validation Accuracy: 0.63
Confusion matrix
[[15  0  3  0]
 [ 0 45 15 13]
 [ 5  4 30 17]
 [13 19 36 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 33
Validation Loss: 0.0029
Validation Accuracy: 0.47
Confusion matrix
[[  4   0   1  13]
 [  0  50   7  16]
 [  1   9  13  33]
 [  0  33   4 114]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 34
Validation Loss: 0.0027
Validation Accuracy: 0.61
Confusion matrix
[[ 13   0   1   4]
 [  0  50   9  14]
 [  1   7  19  29]
 [  5  22  17 107]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 35
Validation Loss: 0.0027
Validation Accuracy: 0.63
Confusion matrix
[[14  0  4  0]
 [ 0 54 11  8]
 [ 3 13 27 13]
 [ 8 41 24 78]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 36
Validation Loss: 0.0028
Validation Accuracy: 0.65
Confusion matrix
[[16  0  2  0]
 [ 0 54 11  8]
 [ 3 12 21 20]
 [ 9 39 13 90]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 45
Validation Loss: 0.0029
Validation Accuracy: 0.59
Confusion matrix
[[13  0  0  5]
 [ 0 51 11 11]
 [ 5 11 18 22]
 [ 6 40 12 93]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 46
Validation Loss: 0.0029
Validation Accuracy: 0.48
Confusion matrix
[[ 5  0  2 11]
 [ 0 50  9 14]
 [ 1 11 18 26]
 [ 3 39 11 98]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 47
Validation Loss: 0.0029
Validation Accuracy: 0.62
Confusion matrix
[[14  0  1  3]
 [ 0 52 10 11]
 [ 4 13 22 17]
 [ 7 43 10 91]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 48
Validation Loss: 0.0027
Validation Accuracy: 0.61
Confusion matrix
[[13  0  0  5]
 [ 0 51 10 12]
 [ 4 10 22 20]
 [ 7 38 12 94]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 49
Validation Loss: 0.0028
Validation Accuracy: 0.54
Confusion matrix
[[  8   0   1   9]
 [  0  54   6  13]
 [  3  10  16  27]
 [  3  37   5 106]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 50
Validation Loss: 0.0028
Validation Accuracy: 0.50
Confusion matrix
[[ 5  0  2 11]
 [ 0 53 11  9]
 [ 0 11 25 20]
 [ 3 48 19 81]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 51
Validation Loss: 0.0028
Validation Accuracy: 0.59
Confusion matrix
[[12  0  0  6]
 [ 0 55  6 12]
 [ 5 11 18 22]
 [ 5 43 10 93]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 52
Validation Loss: 0.0028
Validation Accuracy: 0.61
Confusion matrix
[[12  0  0  6]
 [ 0 55  6 12]
 [ 2 13 23 18]
 [ 5 45 11 90]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 53
Validation Loss: 0.0028
Validation Accuracy: 0.60
Confusion matrix
[[13  0  0  5]
 [ 0 52  9 12]
 [ 3 11 22 20]
 [ 7 43 14 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 54
Validation Loss: 0.0028
Validation Accuracy: 0.55
Confusion matrix
[[ 8  0  0 10]
 [ 0 52  5 16]
 [ 1 10 22 23]
 [ 4 40  9 98]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 55
Validation Loss: 0.0028
Validation Accuracy: 0.50
Confusion matrix
[[ 6  0  1 11]
 [ 0 56  6 11]
 [ 2 14 18 22]
 [ 4 52  9 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 56
Validation Loss: 0.0027
Validation Accuracy: 0.58
Confusion matrix
[[10  0  0  8]
 [ 0 53  8 12]
 [ 1 11 23 21]
 [ 4 40 12 95]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 57
Validation Loss: 0.0028
Validation Accuracy: 0.52
Confusion matrix
[[ 7  0  0 11]
 [ 0 54  5 14]
 [ 2 11 19 24]
 [ 4 45  9 93]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 58
Validation Loss: 0.0028
Validation Accuracy: 0.57
Confusion matrix
[[11  0  0  7]
 [ 0 55  6 12]
 [ 1 14 19 22]
 [ 4 46 13 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 59
Validation Loss: 0.0028
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 57  4 12]
 [ 1 14 20 21]
 [ 4 49 10 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 60
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[10  0  0  8]
 [ 0 55  5 13]
 [ 1 12 21 22]
 [ 4 47  9 91]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 61
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 54  6 13]
 [ 1 13 20 22]
 [ 4 45  9 93]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 62
Validation Loss: 0.0027
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 55  6 12]
 [ 3 12 18 23]
 [ 4 45  9 93]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 63
Validation Loss: 0.0027
Validation Accuracy: 0.54
Confusion matrix
[[ 8  0  0 10]
 [ 0 56  5 12]
 [ 2 13 20 21]
 [ 4 48 10 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 64
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[10  0  0  8]
 [ 0 55  6 12]
 [ 1 12 21 22]
 [ 4 48 12 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 65
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 59  4 10]
 [ 2 13 20 21]
 [ 4 53  8 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 66
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[10  0  0  8]
 [ 0 59  4 10]
 [ 2 16 20 18]
 [ 4 51 12 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 67
Validation Loss: 0.0027
Validation Accuracy: 0.52
Confusion matrix
[[ 7  0  0 11]
 [ 0 55  7 11]
 [ 1 15 21 19]
 [ 4 49 12 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 68
Validation Loss: 0.0026
Validation Accuracy: 0.52
Confusion matrix
[[ 6  0  2 10]
 [ 0 55  5 13]
 [ 1 12 22 21]
 [ 4 42 13 92]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 69
Validation Loss: 0.0028
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  0  9]
 [ 0 61  4  8]
 [ 3 19 19 15]
 [ 4 68  6 73]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 70
Validation Loss: 0.0027
Validation Accuracy: 0.59
Confusion matrix
[[12  0  0  6]
 [ 0 55  6 12]
 [ 4 12 20 20]
 [ 6 45 14 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 71
Validation Loss: 0.0027
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 55  7 11]
 [ 1 14 23 18]
 [ 4 49 14 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 72
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 54  6 13]
 [ 2 13 22 19]
 [ 4 44 13 90]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 73
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 55  6 12]
 [ 3 15 19 19]
 [ 4 46 10 91]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 74
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 59  6  8]
 [ 1 17 21 17]
 [ 4 53 12 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 75
Validation Loss: 0.0027
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  0  9]
 [ 0 54  5 14]
 [ 4 14 17 21]
 [ 4 43 11 93]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 76
Validation Loss: 0.0027
Validation Accuracy: 0.53
Confusion matrix
[[ 7  0  0 11]
 [ 0 61  4  8]
 [ 1 17 21 17]
 [ 4 57 11 79]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 77
Validation Loss: 0.0027
Validation Accuracy: 0.51
Confusion matrix
[[ 6  0  1 11]
 [ 0 57  7  9]
 [ 2 14 21 19]
 [ 3 53 13 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 78
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[10  0  0  8]
 [ 0 58  5 10]
 [ 3 16 19 18]
 [ 4 48 10 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 79
Validation Loss: 0.0027
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 59  4 10]
 [ 4 15 18 19]
 [ 4 51 10 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 80
Validation Loss: 0.0027
Validation Accuracy: 0.53
Confusion matrix
[[ 8  0  1  9]
 [ 0 60  4  9]
 [ 4 19 19 14]
 [ 3 60 12 76]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 81
Validation Loss: 0.0026
Validation Accuracy: 0.52
Confusion matrix
[[ 7  0  2  9]
 [ 0 54  7 12]
 [ 3 13 19 21]
 [ 3 45 11 92]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 82
Validation Loss: 0.0028
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  6 10]
 [ 4 17 17 18]
 [ 4 51  9 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 83
Validation Loss: 0.0026
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 58  6  9]
 [ 3 17 21 15]
 [ 6 53 13 79]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 84
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 16 20 17]
 [ 4 49 13 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 85
Validation Loss: 0.0028
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  0  9]
 [ 0 58  4 11]
 [ 4 18 17 17]
 [ 4 54  7 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 86
Validation Loss: 0.0028
Validation Accuracy: 0.51
Confusion matrix
[[ 7  0  0 11]
 [ 0 57  4 12]
 [ 4 17 15 20]
 [ 4 45 10 92]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 87
Validation Loss: 0.0026
Validation Accuracy: 0.61
Confusion matrix
[[12  0  0  6]
 [ 0 56  5 12]
 [ 3 11 22 20]
 [ 6 42 13 90]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 88
Validation Loss: 0.0030
Validation Accuracy: 0.51
Confusion matrix
[[ 7  0  3  8]
 [ 0 61  7  5]
 [ 2 21 24  9]
 [ 5 72 14 60]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 89
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  4 12]
 [ 4 16 20 16]
 [ 6 51 12 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 90
Validation Loss: 0.0027
Validation Accuracy: 0.54
Confusion matrix
[[ 8  0  1  9]
 [ 0 53  5 15]
 [ 3 12 22 19]
 [ 5 43 13 90]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 91
Validation Loss: 0.0028
Validation Accuracy: 0.55
Confusion matrix
[[10  0  0  8]
 [ 0 54  5 14]
 [ 3 15 20 18]
 [ 5 48 14 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 92
Validation Loss: 0.0028
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  1  8]
 [ 0 58  5 10]
 [ 3 16 22 15]
 [ 6 52 12 81]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 93
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[10  0  0  8]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 4 47 11 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 94
Validation Loss: 0.0027
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 58  5 10]
 [ 3 15 21 17]
 [ 5 49 13 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 95
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 16 20 17]
 [ 4 49 12 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 96
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 58  5 10]
 [ 3 17 20 16]
 [ 4 48 12 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 97
Validation Loss: 0.0027
Validation Accuracy: 0.59
Confusion matrix
[[11  0  0  7]
 [ 0 58  5 10]
 [ 3 15 21 17]
 [ 5 48 13 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 98
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 58  6  9]
 [ 3 16 20 17]
 [ 4 54 12 81]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 99
Validation Loss: 0.0027
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  0  9]
 [ 0 58  5 10]
 [ 3 17 19 17]
 [ 4 53 12 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 100
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 59  5  9]
 [ 2 16 21 17]
 [ 4 54 14 79]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 101
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 16 20 17]
 [ 4 49 14 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 102
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 4 16 20 16]
 [ 4 50 10 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 103
Validation Loss: 0.0027
Validation Accuracy: 0.54
Confusion matrix
[[ 8  0  1  9]
 [ 0 57  5 11]
 [ 2 16 22 16]
 [ 4 50 14 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 104
Validation Loss: 0.0026
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  1  8]
 [ 0 55  6 12]
 [ 2 15 22 17]
 [ 5 44 15 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 105
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  1  8]
 [ 0 55  5 13]
 [ 2 14 21 19]
 [ 4 46 10 91]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 106
Validation Loss: 0.0027
Validation Accuracy: 0.58
Confusion matrix
[[12  0  0  6]
 [ 0 57  5 11]
 [ 4 16 19 17]
 [ 5 52 11 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 107
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[10  0  0  8]
 [ 0 56  5 12]
 [ 2 15 22 17]
 [ 5 47 13 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 108
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 17 20 16]
 [ 5 51 11 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 109
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[10  0  0  8]
 [ 0 57  5 11]
 [ 4 17 19 16]
 [ 4 50 11 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 110
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 16 21 16]
 [ 4 50 11 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 111
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 4 16 19 17]
 [ 5 50 12 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 112
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[10  0  0  8]
 [ 0 57  5 11]
 [ 3 16 21 16]
 [ 4 50 12 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 113
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 4 16 20 16]
 [ 4 50 11 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 114
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[10  0  0  8]
 [ 0 57  5 11]
 [ 3 17 20 16]
 [ 4 53 11 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 115
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[10  0  0  8]
 [ 0 57  5 11]
 [ 4 17 18 17]
 [ 4 50 11 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 116
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 4 17 19 16]
 [ 4 50 12 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 117
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 4 16 20 16]
 [ 5 50 13 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 118
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 4 17 19 16]
 [ 4 50 11 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 119
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 4 17 19 16]
 [ 4 52 12 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 120
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 4 16 20 16]
 [ 6 50 13 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 121
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[10  0  0  8]
 [ 0 57  5 11]
 [ 4 16 19 17]
 [ 4 50 10 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 122
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 4 16 19 17]
 [ 6 50 12 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 123
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[10  0  0  8]
 [ 0 57  5 11]
 [ 4 16 19 17]
 [ 4 49 12 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 124
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[10  0  0  8]
 [ 0 57  5 11]
 [ 3 16 21 16]
 [ 4 52 12 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 125
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 4 17 18 17]
 [ 4 48 10 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 126
Validation Loss: 0.0027
Validation Accuracy: 0.56
Confusion matrix
[[10  0  0  8]
 [ 0 57  5 11]
 [ 4 17 18 17]
 [ 4 50 12 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 127
Validation Loss: 0.0028
Validation Accuracy: 0.56
Confusion matrix
[[10  0  0  8]
 [ 0 56  5 12]
 [ 4 15 18 19]
 [ 4 48 11 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 128
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[11  0  0  7]
 [ 0 56  5 12]
 [ 4 15 19 18]
 [ 5 51 12 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 129
Validation Loss: 0.0027
Validation Accuracy: 0.53
Confusion matrix
[[ 8  0  0 10]
 [ 0 56  5 12]
 [ 4 16 18 18]
 [ 4 48  8 91]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 130
Validation Loss: 0.0028
Validation Accuracy: 0.56
Confusion matrix
[[12  0  0  6]
 [ 0 57  4 12]
 [ 5 18 14 19]
 [ 7 59  6 79]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 131
Validation Loss: 0.0027
Validation Accuracy: 0.61
Confusion matrix
[[12  0  0  6]
 [ 0 57  6 10]
 [ 4 14 23 15]
 [ 6 45 15 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 132
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[10  0  0  8]
 [ 0 56  5 12]
 [ 3 17 20 16]
 [ 5 53 12 81]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 133
Validation Loss: 0.0027
Validation Accuracy: 0.50
Confusion matrix
[[ 7  0  1 10]
 [ 0 56  4 13]
 [ 2 19 16 19]
 [ 1 59  9 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 134
Validation Loss: 0.0026
Validation Accuracy: 0.59
Confusion matrix
[[11  0  0  7]
 [ 0 55  7 11]
 [ 3 14 23 16]
 [ 4 44 15 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 135
Validation Loss: 0.0027
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 15 20 18]
 [ 3 57 12 79]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 136
Validation Loss: 0.0026
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 3 16 22 15]
 [ 6 53 12 80]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 137
Validation Loss: 0.0027
Validation Accuracy: 0.57
Confusion matrix
[[10  0  0  8]
 [ 0 57  5 11]
 [ 3 15 21 17]
 [ 4 49 10 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 138
Validation Loss: 0.0026
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 16 21 16]
 [ 4 50 10 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 139
Validation Loss: 0.0026
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 15 22 16]
 [ 4 51 11 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 140
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 15 21 17]
 [ 4 51 11 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 141
Validation Loss: 0.0026
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 4 15 20 17]
 [ 4 50 11 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 142
Validation Loss: 0.0026
Validation Accuracy: 0.57
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 4 15 20 17]
 [ 6 50 12 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 143
Validation Loss: 0.0026
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 16 20 17]
 [ 4 50 10 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 144
Validation Loss: 0.0026
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 57  6 10]
 [ 4 16 21 15]
 [ 6 52 12 81]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 145
Validation Loss: 0.0026
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 4 16 20 16]
 [ 4 51 11 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 146
Validation Loss: 0.0026
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 57  6 10]
 [ 4 16 21 15]
 [ 6 52 12 81]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 147
Validation Loss: 0.0026
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 3 16 21 16]
 [ 5 51 11 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 148
Validation Loss: 0.0026
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 57  6 10]
 [ 3 16 22 15]
 [ 5 52 12 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 149
Validation Loss: 0.0026
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  6 10]
 [ 3 16 22 15]
 [ 4 51 12 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 150
Validation Loss: 0.0026
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  6 10]
 [ 3 15 22 16]
 [ 4 51 11 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 151
Validation Loss: 0.0026
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 3 16 22 15]
 [ 5 52 11 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 152
Validation Loss: 0.0027
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 57  6 10]
 [ 4 16 21 15]
 [ 6 52 12 81]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 153
Validation Loss: 0.0027
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 4 16 21 15]
 [ 4 53 11 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 154
Validation Loss: 0.0026
Validation Accuracy: 0.58
Confusion matrix
[[11  0  0  7]
 [ 0 57  6 10]
 [ 3 16 22 15]
 [ 5 53 11 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 155
Validation Loss: 0.0026
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  6 10]
 [ 3 16 21 16]
 [ 4 56 11 80]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 156
Validation Loss: 0.0028
Validation Accuracy: 0.56
Confusion matrix
[[10  0  0  8]
 [ 0 56  5 12]
 [ 4 14 19 19]
 [ 5 51  9 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 157
Validation Loss: 0.0030
Validation Accuracy: 0.51
Confusion matrix
[[ 7  0  7  4]
 [ 0 61  7  5]
 [ 2 17 23 14]
 [ 2 75 15 59]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 158
Validation Loss: 0.0027
Validation Accuracy: 0.43
Confusion matrix
[[ 1  0 11  6]
 [ 0 51 19  3]
 [ 2 11 28 15]
 [ 2 40 41 68]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 159
Validation Loss: 0.0028
Validation Accuracy: 0.53
Confusion matrix
[[ 12   1   0   5]
 [  1  39   4  29]
 [  5   4   8  39]
 [  5  23   4 119]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 160
Validation Loss: 0.0029
Validation Accuracy: 0.59
Confusion matrix
[[ 13   0   1   4]
 [  0  50   9  14]
 [  9  11  15  21]
 [ 14  27   9 101]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 161
Validation Loss: 0.0032
Validation Accuracy: 0.58
Confusion matrix
[[14  0  0  4]
 [ 2 49  8 14]
 [11  6 16 23]
 [21 36  8 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 162
Validation Loss: 0.0031
Validation Accuracy: 0.48
Confusion matrix
[[ 9  0  0  9]
 [ 1 58  3 11]
 [ 9 18  5 24]
 [10 56  2 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 163
Validation Loss: 0.0031
Validation Accuracy: 0.62
Confusion matrix
[[15  0  1  2]
 [ 0 46  9 18]
 [ 5  5 23 23]
 [12 30 19 90]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 164
Validation Loss: 0.0034
Validation Accuracy: 0.51
Confusion matrix
[[ 9  0  0  9]
 [ 0 48  6 19]
 [ 3 11 16 26]
 [ 3 43 14 91]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 165
Validation Loss: 0.0033
Validation Accuracy: 0.51
Confusion matrix
[[ 6  0  5  7]
 [ 0 60  7  6]
 [ 2 16 21 17]
 [ 4 56 16 75]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 166
Validation Loss: 0.0031
Validation Accuracy: 0.51
Confusion matrix
[[ 8  1  0  9]
 [ 0 53  6 14]
 [ 5 15 14 22]
 [ 5 43  7 96]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 167
Validation Loss: 0.0032
Validation Accuracy: 0.52
Confusion matrix
[[ 7  0  4  7]
 [ 0 56  8  9]
 [ 2 15 22 17]
 [ 8 49 16 78]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 168
Validation Loss: 0.0033
Validation Accuracy: 0.49
Confusion matrix
[[ 8  1  0  9]
 [ 0 59  4 10]
 [ 5 21 13 17]
 [ 5 64  9 73]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 169
Validation Loss: 0.0031
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 58  7  8]
 [ 2 18 21 15]
 [ 6 50 12 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 170
Validation Loss: 0.0031
Validation Accuracy: 0.47
Confusion matrix
[[ 4  0  1 13]
 [ 0 56  7 10]
 [ 2 16 19 19]
 [ 4 46 16 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 171
Validation Loss: 0.0031
Validation Accuracy: 0.57
Confusion matrix
[[11  0  0  7]
 [ 0 57  5 11]
 [ 3 16 20 17]
 [ 8 49 15 79]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 172
Validation Loss: 0.0031
Validation Accuracy: 0.53
Confusion matrix
[[ 8  0  1  9]
 [ 0 57  6 10]
 [ 2 15 19 20]
 [ 6 50 11 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 173
Validation Loss: 0.0031
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 59  4 10]
 [ 3 15 17 21]
 [ 6 48  9 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 174
Validation Loss: 0.0030
Validation Accuracy: 0.57
Confusion matrix
[[10  0  1  7]
 [ 0 56  5 12]
 [ 3 15 20 18]
 [ 6 45 11 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 175
Validation Loss: 0.0031
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 18 20]
 [ 5 44  9 93]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 176
Validation Loss: 0.0031
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  7 10]
 [ 3 17 20 16]
 [ 5 54  8 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 177
Validation Loss: 0.0031
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 55  5 13]
 [ 3 15 20 18]
 [ 5 47  9 90]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 178
Validation Loss: 0.0031
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  4 12]
 [ 3 17 19 17]
 [ 5 51  8 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 179
Validation Loss: 0.0031
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  5 11]
 [ 3 16 19 18]
 [ 5 52  8 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 180
Validation Loss: 0.0031
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  5 12]
 [ 3 16 19 18]
 [ 5 50  8 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 181
Validation Loss: 0.0030
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  5 12]
 [ 3 15 20 18]
 [ 5 46  9 91]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 183
Validation Loss: 0.0031
Validation Accuracy: 0.56
Confusion matrix
[[10  0  0  8]
 [ 0 56  5 12]
 [ 3 15 20 18]
 [ 5 50  9 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 184
Validation Loss: 0.0031
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 20 18]
 [ 5 46  9 91]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 185
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 16 20 17]
 [ 6 48  8 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 186
Validation Loss: 0.0030
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 20 18]
 [ 5 46  9 91]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 187
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 55  5 13]
 [ 3 15 20 18]
 [ 6 45 10 90]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 188
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 16 19 18]
 [ 5 50  7 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 189
Validation Loss: 0.0030
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 14 19 20]
 [ 6 44  8 93]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 190
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 20 18]
 [ 5 48 10 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 191
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 4 15 18 19]
 [ 5 49  7 90]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 192
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 16 20 17]
 [ 6 47 11 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 193
Validation Loss: 0.0030
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  0  9]
 [ 0 55  6 12]
 [ 4 15 17 20]
 [ 6 45 10 90]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 194
Validation Loss: 0.0030
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  0  9]
 [ 0 55  6 12]
 [ 4 15 17 20]
 [ 6 45 11 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 195
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 55  6 12]
 [ 3 14 20 19]
 [ 6 46 11 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 196
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[10  0  0  8]
 [ 0 55  6 12]
 [ 4 15 18 19]
 [ 6 45 11 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 197
Validation Loss: 0.0030
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  0  9]
 [ 0 55  6 12]
 [ 4 15 19 18]
 [ 6 46 11 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 198
Validation Loss: 0.0030
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  0  9]
 [ 0 55  6 12]
 [ 4 14 18 20]
 [ 6 45 11 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 199
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 55  6 12]
 [ 3 15 20 18]
 [ 6 46 11 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 200
Validation Loss: 0.0030
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  6 11]
 [ 3 16 20 17]
 [ 6 50 12 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 201
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 14 20 19]
 [ 6 45 11 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 202
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 14 20 19]
 [ 6 45 11 89]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 203
Validation Loss: 0.0030
Validation Accuracy: 0.56
Confusion matrix
[[10  0  0  8]
 [ 0 56  5 12]
 [ 4 16 19 17]
 [ 6 47 11 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 204
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 16 20 17]
 [ 6 50 11 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 205
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 20 18]
 [ 6 46 11 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 206
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 16 20 17]
 [ 6 48 12 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 207
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  5 11]
 [ 3 16 20 17]
 [ 6 51 12 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 208
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 16 21 16]
 [ 6 46 12 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 209
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 20 18]
 [ 6 47 11 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 210
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 16 20 17]
 [ 6 50 11 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 211
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  5 12]
 [ 3 15 20 18]
 [ 6 46 13 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 212
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  5 12]
 [ 3 15 20 18]
 [ 6 46 13 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 213
Validation Loss: 0.0030
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  5 11]
 [ 3 16 21 16]
 [ 6 48 11 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 214
Validation Loss: 0.0030
Validation Accuracy: 0.57
Confusion matrix
[[10  0  1  7]
 [ 0 57  5 11]
 [ 3 15 21 17]
 [ 6 48 11 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 215
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 15 21 17]
 [ 6 51 11 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 216
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 6 47 12 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 217
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 55  6 12]
 [ 3 15 21 17]
 [ 6 47 12 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 218
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 6 46 13 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 219
Validation Loss: 0.0030
Validation Accuracy: 0.57
Confusion matrix
[[10  0  1  7]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 6 46 13 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 220
Validation Loss: 0.0030
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  5 11]
 [ 3 15 21 17]
 [ 6 48 11 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 221
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 6 47 11 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 222
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 6 46 13 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 223
Validation Loss: 0.0030
Validation Accuracy: 0.54
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 16 21 16]
 [ 7 51 14 79]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 224
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 6 46 12 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 225
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 6 46 13 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 226
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 6 46 13 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 227
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 6 46 12 87]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 228
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  5 11]
 [ 3 15 21 17]
 [ 6 48 12 85]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 229
Validation Loss: 0.0029
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  5 11]
 [ 3 15 21 17]
 [ 6 47 12 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 230
Validation Loss: 0.0029
Validation Accuracy: 0.57
Confusion matrix
[[10  0  1  7]
 [ 0 57  6 10]
 [ 3 15 21 17]
 [ 7 48 13 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 231
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 56  6 11]
 [ 3 15 21 17]
 [ 6 48 13 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 232
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  6 10]
 [ 3 15 21 17]
 [ 6 49 13 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 233
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 15 21 17]
 [ 6 49 13 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 234
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 17 21 15]
 [ 6 50 13 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 235
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 16 21 16]
 [ 6 50 13 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 236
Validation Loss: 0.0030
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  0  9]
 [ 0 56  5 12]
 [ 3 15 21 17]
 [ 6 46 11 88]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 237
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 15 21 17]
 [ 6 49 13 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 238
Validation Loss: 0.0029
Validation Accuracy: 0.56
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 15 21 17]
 [ 6 46 13 86]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 239
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  0  9]
 [ 0 57  5 11]
 [ 3 15 21 17]
 [ 6 48 13 84]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 240
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 59  5  9]
 [ 3 16 21 16]
 [ 6 54 13 78]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 241
Validation Loss: 0.0030
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 58  5 10]
 [ 3 16 21 16]
 [ 6 52 12 81]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 242
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 58  5 10]
 [ 3 16 21 16]
 [ 6 50 13 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 243
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 16 21 16]
 [ 6 49 13 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 244
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 15 21 17]
 [ 6 49 13 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 245
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 15 21 17]
 [ 6 50 13 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 246
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 15 21 17]
 [ 6 49 13 83]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 247
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 57  6 10]
 [ 3 15 21 17]
 [ 7 50 12 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 248
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 58  6  9]
 [ 3 16 21 16]
 [ 7 50 13 81]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 249
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 58  6  9]
 [ 3 15 21 17]
 [ 7 50 13 81]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
/tmp/ipykernel_28/2755581986.py:116: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  inputs = torch.tensor(Train_data_s[idx[start_idx:end_idx]]).to(device)
/tmp/ipykernel_28/2755581986.py:117: UserWarning: To copy construct from a tensor, it is recommended to use sourceTensor.clone().detach() or sourceTensor.clone().detach().requires_grad_(True), rather than torch.tensor(sourceTensor).
  labels = torch.tensor(Train_label_s[idx[start_idx:end_idx]], dtype=torch.long).to(device)
Epoch 250
Validation Loss: 0.0029
Validation Accuracy: 0.55
Confusion matrix
[[ 9  0  1  8]
 [ 0 58  6  9]
 [ 3 16 21 16]
 [ 6 50 13 82]]
Best Accuracy: 0.67
Best matrix
[[ 17   0   1   0]
 [  0  51   8  14]
 [  6   5  16  29]
 [ 12  14  11 114]]
